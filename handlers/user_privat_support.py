
from aiogram import F, types,  Router
from aiogram.filters import CommandStart, Command, or_f

from common.contacts_list import contact_shipping, contact_consult, contact_assembling, contact_cashier
from filters.chat_types import ChatTypeFilter

from kbds import reply
from kbds import reply_custom

user_privat_router_support = Router()
user_privat_router_support.message.filter(ChatTypeFilter(['private']))

@user_privat_router_support.message(F.text.lower().contains('–∫–∞—Ç–∞–ª–æ–≥'))
@user_privat_router_support.message(Command('catalog'))
async def catalog_cmd(message : types.Message):
    await message.answer('–í–∏ –±–∞—á–µ—Ç–µ –ø–æ—á–∞—Ç–æ–∫ –∫–∞—Ç–∞–ª–æ–≥—É', reply_markup=reply_custom.catalog_kb)

@user_privat_router_support.message(or_f(Command('utk'),
                                        (F.text.lower().contains('—Ç–µ–ø–ª–æ')),
                                        (F.text.lower().contains('–≤–æ–¥–∞')),
                                        (F.text.lower().contains('–≤–µ–Ω—Ç–∏–ª—è')),
                                        (F.text.lower().contains('–µ–ª–µ–∫—Ç—Ä–∏–∫')),
                                        (F.text.lower().contains('–ø—Ä–æ–≤–æ–¥')),
                                        (F.text.lower().contains('–Ω–∞—Å–æ—Å')),
                                        (F.text.lower().contains('–∫–æ—Ç–ª')),
                                         ))
async def utk_cmd(message : types.Message):
    await message.answer('–í—ñ—Ç–∞—î–º–æ –≤–∞—Å –≤ –£–¢–ö', reply_markup=reply_custom.utk2_kb.as_markup(
                                                        resize_keyboard=True,
                                                        input_field_placeholder='–©–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å'
                                                        ))   


@user_privat_router_support.message(or_f(Command('doors'),
                                        (F.text.lower().contains('–¥–≤–µ—Ä')),
                                        (F.text.lower().contains('—à–ø–∞–ª–µ—Ä')),
                                        (F.text.lower().contains('–æ–±–æ–∏')),
                                        
                                         ))
async def doors_cmd(message : types.Message):
    await message.answer('–í—ñ—Ç–∞—î–º–æ –≤–∞—Å –≤ –ú–∞—Ä–∫–µ—Ç—ñ –î–≤–µ—Ä–µ–π', reply_markup=reply_custom.start_kb)       

@user_privat_router_support.message(F.text.lower().contains('–≤–∏—Ö—ñ–¥'))
@user_privat_router_support.message(Command('exit'))
async def exit_cmd(message : types.Message):
    await message.answer('–î–æ –Ω–æ–≤–∏—Ö –∑—É—Å—Ç—Ä—ñ—á–µ–π üñêÔ∏è', reply_markup=reply_custom.del_kbd) 



@user_privat_router_support.message(F.text.lower().contains('—Ä–µ–∑–µ—Ä–≤')) # ----------------- contains - —à—É–∫–∞—î –∑–±—ñ–≥–∏ —É —Ç–µ–∫—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
async def filter_text_custom_two(message : types.Message):
    await message.answer(f'–í—ñ—Ç–∞—î–º–æ.\n {message.from_user.first_name}\n –∑ –ø—Ä–∏–≤–æ–¥—É —Ä–µ–∑–µ—Ä–≤—É \n –≤–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º :\n {contact_consult}') 



@user_privat_router_support.message(F.text.lower().contains('–∫–æ–Ω—Å—É–ª—å—Ç')) # ----------------- contains - —à—É–∫–∞—î –∑–±—ñ–≥–∏ —É —Ç–µ–∫—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
async def filter_text_custom_three(message : types.Message):
    await message.answer(f'–í—ñ—Ç–∞—î–º–æ.\n {message.from_user.first_name}\n –º–æ–∂–µ–º–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç—É–≤–∞—Ç–∏ –≤–∞—Å \n –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º :\n {contact_consult}')

@user_privat_router_support.message(F.text.lower().contains('–∑–∞–º–æ–≤')) # ----------------- contains - —à—É–∫–∞—î –∑–±—ñ–≥–∏ —É —Ç–µ–∫—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
async def filter_text_custom_four(message : types.Message):
    await message.answer(f'–í—ñ—Ç–∞—î–º–æ.\n {message.from_user.first_name}\n –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –∑–∞–º–æ–ª–µ–Ω–Ω—è –≤–∏ –º–æ–∂–µ—Ç–µ \n –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º :\n {contact_consult}')    

@user_privat_router_support.message(F.text.lower().contains('–º–æ–Ω—Ç–∞–∂')) # ----------------- contains - —à—É–∫–∞—î –∑–±—ñ–≥–∏ —É —Ç–µ–∫—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
async def filter_text_custom_five(message : types.Message):
    await message.answer(f'–í—ñ—Ç–∞—î–º–æ.\n {message.from_user.first_name}\n –∑–∞–º–æ–≤–∏—Ç–∏ –º–æ–Ω—Ç–∞–∂  –≤–∏ –º–æ–∂–µ—Ç–µ \n –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º :\n {contact_assembling}')

@user_privat_router_support.message(F.text.lower().contains('–ø–ª–∞—Ç')) # ----------------- contains - —à—É–∫–∞—î –∑–±—ñ–≥–∏ —É —Ç–µ–∫—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
async def filter_text_custom_six(message : types.Message):
    await message.answer(f'–í—ñ—Ç–∞—î–º–æ.\n {message.from_user.first_name}\n –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –æ–ø–ª–∞—Ç—É –≤–∏ –º–æ–∂–µ—Ç–µ \n –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º :\n {contact_cashier}') 


